	component mySystem is
		port (
			alt_vip_cl_cvo_0_clocked_video_vid_clk                      : in    std_logic                     := 'X';             -- vid_clk
			alt_vip_cl_cvo_0_clocked_video_vid_data                     : out   std_logic_vector(23 downto 0);                    -- vid_data
			alt_vip_cl_cvo_0_clocked_video_underflow                    : out   std_logic;                                        -- underflow
			alt_vip_cl_cvo_0_clocked_video_vid_datavalid                : out   std_logic;                                        -- vid_datavalid
			alt_vip_cl_cvo_0_clocked_video_vid_v_sync                   : out   std_logic;                                        -- vid_v_sync
			alt_vip_cl_cvo_0_clocked_video_vid_h_sync                   : out   std_logic;                                        -- vid_h_sync
			alt_vip_cl_cvo_0_clocked_video_vid_f                        : out   std_logic;                                        -- vid_f
			alt_vip_cl_cvo_0_clocked_video_vid_h                        : out   std_logic;                                        -- vid_h
			alt_vip_cl_cvo_0_clocked_video_vid_v                        : out   std_logic;                                        -- vid_v
			alt_vip_cti_0_clocked_video_vid_clk                         : in    std_logic                     := 'X';             -- vid_clk
			alt_vip_cti_0_clocked_video_vid_data                        : in    std_logic_vector(23 downto 0) := (others => 'X'); -- vid_data
			alt_vip_cti_0_clocked_video_overflow                        : out   std_logic;                                        -- overflow
			alt_vip_cti_0_clocked_video_vid_datavalid                   : in    std_logic                     := 'X';             -- vid_datavalid
			alt_vip_cti_0_clocked_video_vid_locked                      : in    std_logic                     := 'X';             -- vid_locked
			alt_vip_cti_0_clocked_video_vid_v_sync                      : in    std_logic                     := 'X';             -- vid_v_sync
			alt_vip_cti_0_clocked_video_vid_h_sync                      : in    std_logic                     := 'X';             -- vid_h_sync
			alt_vip_cti_0_clocked_video_vid_f                           : in    std_logic                     := 'X';             -- vid_f
			clk_clk                                                     : in    std_logic                     := 'X';             -- clk
			pio_0_external_connection_export                            : out   std_logic_vector(1 downto 0);                     -- export
			reset_reset_n                                               : in    std_logic                     := 'X';             -- reset_n
			uart_0_external_connection_rxd                              : in    std_logic                     := 'X';             -- rxd
			uart_0_external_connection_txd                              : out   std_logic;                                        -- txd
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_addr  : out   std_logic_vector(12 downto 0);                    -- sdram_addr
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_ba    : out   std_logic_vector(1 downto 0);                     -- sdram_ba
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_cas_n : out   std_logic;                                        -- sdram_cas_n
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_cke   : out   std_logic;                                        -- sdram_cke
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_cs_n  : out   std_logic;                                        -- sdram_cs_n
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_dq    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- sdram_dq
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_dqm   : out   std_logic_vector(1 downto 0);                     -- sdram_dqm
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_ras_n : out   std_logic;                                        -- sdram_ras_n
			w9825g6kh_sdramcontroller_125mhz_cl3_0_sdram_if_sdram_we_n  : out   std_logic                                         -- sdram_we_n
		);
	end component mySystem;

